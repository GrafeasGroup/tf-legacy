name: Terraform Plan

on:
  pull_request:
    branches:
      - 'main'

jobs:
  build:

    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.5
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform init
      id: init
      run: terraform init
      env:
        TF_IN_AUTOMATION: 1
        TF_WORKSPACE: 'prod'

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      env:
        LINODE_TOKEN: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      env:
        TF_IN_AUTOMATION: 1
        TF_WORKSPACE: 'prod'

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Fail job if failure
      if: steps.fmt.outcome != 'success' || steps.init.outcome != 'success' || steps.validate.outcome != 'success' || steps.plan.outcome != 'success'
      run: exit 1
